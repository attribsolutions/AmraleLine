//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SweetPOS.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsReportTables")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsReportTables : global::System.Data.DataSet {
        
        private tblSalesDataTable tabletblSales;
        
        private tblSaleItemsDataTable tabletblSaleItems;
        
        private tblTotalDataTable tabletblTotal;
        
        private tblSaleSummaryDataTable tabletblSaleSummary;
        
        private tblStockDataTable tabletblStock;
        
        private tblChallansDataTable tabletblChallans;
        
        private tblChallanItemsDataTable tabletblChallanItems;
        
        private tblPurchasesDataTable tabletblPurchases;
        
        private tblPurchaseItemsDataTable tabletblPurchaseItems;
        
        private tblReceiptPaymentsDataTable tabletblReceiptPayments;
        
        private tblItemsDataTable tabletblItems;
        
        private tblOrderDataTable tabletblOrder;
        
        private tblOrderDetailsDataTable tabletblOrderDetails;
        
        private tblCustomerMessagesDataTable tabletblCustomerMessages;
        
        private tblMilkSummaryDataTable tabletblMilkSummary;
        
        private tblCustomerBalanceDataTable tabletblCustomerBalance;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsReportTables() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsReportTables(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblSales"] != null)) {
                    base.Tables.Add(new tblSalesDataTable(ds.Tables["tblSales"]));
                }
                if ((ds.Tables["tblSaleItems"] != null)) {
                    base.Tables.Add(new tblSaleItemsDataTable(ds.Tables["tblSaleItems"]));
                }
                if ((ds.Tables["tblTotal"] != null)) {
                    base.Tables.Add(new tblTotalDataTable(ds.Tables["tblTotal"]));
                }
                if ((ds.Tables["tblSaleSummary"] != null)) {
                    base.Tables.Add(new tblSaleSummaryDataTable(ds.Tables["tblSaleSummary"]));
                }
                if ((ds.Tables["tblStock"] != null)) {
                    base.Tables.Add(new tblStockDataTable(ds.Tables["tblStock"]));
                }
                if ((ds.Tables["tblChallans"] != null)) {
                    base.Tables.Add(new tblChallansDataTable(ds.Tables["tblChallans"]));
                }
                if ((ds.Tables["tblChallanItems"] != null)) {
                    base.Tables.Add(new tblChallanItemsDataTable(ds.Tables["tblChallanItems"]));
                }
                if ((ds.Tables["tblPurchases"] != null)) {
                    base.Tables.Add(new tblPurchasesDataTable(ds.Tables["tblPurchases"]));
                }
                if ((ds.Tables["tblPurchaseItems"] != null)) {
                    base.Tables.Add(new tblPurchaseItemsDataTable(ds.Tables["tblPurchaseItems"]));
                }
                if ((ds.Tables["tblReceiptPayments"] != null)) {
                    base.Tables.Add(new tblReceiptPaymentsDataTable(ds.Tables["tblReceiptPayments"]));
                }
                if ((ds.Tables["tblItems"] != null)) {
                    base.Tables.Add(new tblItemsDataTable(ds.Tables["tblItems"]));
                }
                if ((ds.Tables["tblOrder"] != null)) {
                    base.Tables.Add(new tblOrderDataTable(ds.Tables["tblOrder"]));
                }
                if ((ds.Tables["tblOrderDetails"] != null)) {
                    base.Tables.Add(new tblOrderDetailsDataTable(ds.Tables["tblOrderDetails"]));
                }
                if ((ds.Tables["tblCustomerMessages"] != null)) {
                    base.Tables.Add(new tblCustomerMessagesDataTable(ds.Tables["tblCustomerMessages"]));
                }
                if ((ds.Tables["tblMilkSummary"] != null)) {
                    base.Tables.Add(new tblMilkSummaryDataTable(ds.Tables["tblMilkSummary"]));
                }
                if ((ds.Tables["tblCustomerBalance"] != null)) {
                    base.Tables.Add(new tblCustomerBalanceDataTable(ds.Tables["tblCustomerBalance"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSalesDataTable tblSales {
            get {
                return this.tabletblSales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSaleItemsDataTable tblSaleItems {
            get {
                return this.tabletblSaleItems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblTotalDataTable tblTotal {
            get {
                return this.tabletblTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSaleSummaryDataTable tblSaleSummary {
            get {
                return this.tabletblSaleSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblStockDataTable tblStock {
            get {
                return this.tabletblStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblChallansDataTable tblChallans {
            get {
                return this.tabletblChallans;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblChallanItemsDataTable tblChallanItems {
            get {
                return this.tabletblChallanItems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblPurchasesDataTable tblPurchases {
            get {
                return this.tabletblPurchases;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblPurchaseItemsDataTable tblPurchaseItems {
            get {
                return this.tabletblPurchaseItems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblReceiptPaymentsDataTable tblReceiptPayments {
            get {
                return this.tabletblReceiptPayments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblItemsDataTable tblItems {
            get {
                return this.tabletblItems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblOrderDataTable tblOrder {
            get {
                return this.tabletblOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblOrderDetailsDataTable tblOrderDetails {
            get {
                return this.tabletblOrderDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblCustomerMessagesDataTable tblCustomerMessages {
            get {
                return this.tabletblCustomerMessages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblMilkSummaryDataTable tblMilkSummary {
            get {
                return this.tabletblMilkSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblCustomerBalanceDataTable tblCustomerBalance {
            get {
                return this.tabletblCustomerBalance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsReportTables cln = ((dsReportTables)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblSales"] != null)) {
                    base.Tables.Add(new tblSalesDataTable(ds.Tables["tblSales"]));
                }
                if ((ds.Tables["tblSaleItems"] != null)) {
                    base.Tables.Add(new tblSaleItemsDataTable(ds.Tables["tblSaleItems"]));
                }
                if ((ds.Tables["tblTotal"] != null)) {
                    base.Tables.Add(new tblTotalDataTable(ds.Tables["tblTotal"]));
                }
                if ((ds.Tables["tblSaleSummary"] != null)) {
                    base.Tables.Add(new tblSaleSummaryDataTable(ds.Tables["tblSaleSummary"]));
                }
                if ((ds.Tables["tblStock"] != null)) {
                    base.Tables.Add(new tblStockDataTable(ds.Tables["tblStock"]));
                }
                if ((ds.Tables["tblChallans"] != null)) {
                    base.Tables.Add(new tblChallansDataTable(ds.Tables["tblChallans"]));
                }
                if ((ds.Tables["tblChallanItems"] != null)) {
                    base.Tables.Add(new tblChallanItemsDataTable(ds.Tables["tblChallanItems"]));
                }
                if ((ds.Tables["tblPurchases"] != null)) {
                    base.Tables.Add(new tblPurchasesDataTable(ds.Tables["tblPurchases"]));
                }
                if ((ds.Tables["tblPurchaseItems"] != null)) {
                    base.Tables.Add(new tblPurchaseItemsDataTable(ds.Tables["tblPurchaseItems"]));
                }
                if ((ds.Tables["tblReceiptPayments"] != null)) {
                    base.Tables.Add(new tblReceiptPaymentsDataTable(ds.Tables["tblReceiptPayments"]));
                }
                if ((ds.Tables["tblItems"] != null)) {
                    base.Tables.Add(new tblItemsDataTable(ds.Tables["tblItems"]));
                }
                if ((ds.Tables["tblOrder"] != null)) {
                    base.Tables.Add(new tblOrderDataTable(ds.Tables["tblOrder"]));
                }
                if ((ds.Tables["tblOrderDetails"] != null)) {
                    base.Tables.Add(new tblOrderDetailsDataTable(ds.Tables["tblOrderDetails"]));
                }
                if ((ds.Tables["tblCustomerMessages"] != null)) {
                    base.Tables.Add(new tblCustomerMessagesDataTable(ds.Tables["tblCustomerMessages"]));
                }
                if ((ds.Tables["tblMilkSummary"] != null)) {
                    base.Tables.Add(new tblMilkSummaryDataTable(ds.Tables["tblMilkSummary"]));
                }
                if ((ds.Tables["tblCustomerBalance"] != null)) {
                    base.Tables.Add(new tblCustomerBalanceDataTable(ds.Tables["tblCustomerBalance"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblSales = ((tblSalesDataTable)(base.Tables["tblSales"]));
            if ((initTable == true)) {
                if ((this.tabletblSales != null)) {
                    this.tabletblSales.InitVars();
                }
            }
            this.tabletblSaleItems = ((tblSaleItemsDataTable)(base.Tables["tblSaleItems"]));
            if ((initTable == true)) {
                if ((this.tabletblSaleItems != null)) {
                    this.tabletblSaleItems.InitVars();
                }
            }
            this.tabletblTotal = ((tblTotalDataTable)(base.Tables["tblTotal"]));
            if ((initTable == true)) {
                if ((this.tabletblTotal != null)) {
                    this.tabletblTotal.InitVars();
                }
            }
            this.tabletblSaleSummary = ((tblSaleSummaryDataTable)(base.Tables["tblSaleSummary"]));
            if ((initTable == true)) {
                if ((this.tabletblSaleSummary != null)) {
                    this.tabletblSaleSummary.InitVars();
                }
            }
            this.tabletblStock = ((tblStockDataTable)(base.Tables["tblStock"]));
            if ((initTable == true)) {
                if ((this.tabletblStock != null)) {
                    this.tabletblStock.InitVars();
                }
            }
            this.tabletblChallans = ((tblChallansDataTable)(base.Tables["tblChallans"]));
            if ((initTable == true)) {
                if ((this.tabletblChallans != null)) {
                    this.tabletblChallans.InitVars();
                }
            }
            this.tabletblChallanItems = ((tblChallanItemsDataTable)(base.Tables["tblChallanItems"]));
            if ((initTable == true)) {
                if ((this.tabletblChallanItems != null)) {
                    this.tabletblChallanItems.InitVars();
                }
            }
            this.tabletblPurchases = ((tblPurchasesDataTable)(base.Tables["tblPurchases"]));
            if ((initTable == true)) {
                if ((this.tabletblPurchases != null)) {
                    this.tabletblPurchases.InitVars();
                }
            }
            this.tabletblPurchaseItems = ((tblPurchaseItemsDataTable)(base.Tables["tblPurchaseItems"]));
            if ((initTable == true)) {
                if ((this.tabletblPurchaseItems != null)) {
                    this.tabletblPurchaseItems.InitVars();
                }
            }
            this.tabletblReceiptPayments = ((tblReceiptPaymentsDataTable)(base.Tables["tblReceiptPayments"]));
            if ((initTable == true)) {
                if ((this.tabletblReceiptPayments != null)) {
                    this.tabletblReceiptPayments.InitVars();
                }
            }
            this.tabletblItems = ((tblItemsDataTable)(base.Tables["tblItems"]));
            if ((initTable == true)) {
                if ((this.tabletblItems != null)) {
                    this.tabletblItems.InitVars();
                }
            }
            this.tabletblOrder = ((tblOrderDataTable)(base.Tables["tblOrder"]));
            if ((initTable == true)) {
                if ((this.tabletblOrder != null)) {
                    this.tabletblOrder.InitVars();
                }
            }
            this.tabletblOrderDetails = ((tblOrderDetailsDataTable)(base.Tables["tblOrderDetails"]));
            if ((initTable == true)) {
                if ((this.tabletblOrderDetails != null)) {
                    this.tabletblOrderDetails.InitVars();
                }
            }
            this.tabletblCustomerMessages = ((tblCustomerMessagesDataTable)(base.Tables["tblCustomerMessages"]));
            if ((initTable == true)) {
                if ((this.tabletblCustomerMessages != null)) {
                    this.tabletblCustomerMessages.InitVars();
                }
            }
            this.tabletblMilkSummary = ((tblMilkSummaryDataTable)(base.Tables["tblMilkSummary"]));
            if ((initTable == true)) {
                if ((this.tabletblMilkSummary != null)) {
                    this.tabletblMilkSummary.InitVars();
                }
            }
            this.tabletblCustomerBalance = ((tblCustomerBalanceDataTable)(base.Tables["tblCustomerBalance"]));
            if ((initTable == true)) {
                if ((this.tabletblCustomerBalance != null)) {
                    this.tabletblCustomerBalance.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsReportTables";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsReportTables.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblSales = new tblSalesDataTable();
            base.Tables.Add(this.tabletblSales);
            this.tabletblSaleItems = new tblSaleItemsDataTable();
            base.Tables.Add(this.tabletblSaleItems);
            this.tabletblTotal = new tblTotalDataTable();
            base.Tables.Add(this.tabletblTotal);
            this.tabletblSaleSummary = new tblSaleSummaryDataTable();
            base.Tables.Add(this.tabletblSaleSummary);
            this.tabletblStock = new tblStockDataTable();
            base.Tables.Add(this.tabletblStock);
            this.tabletblChallans = new tblChallansDataTable();
            base.Tables.Add(this.tabletblChallans);
            this.tabletblChallanItems = new tblChallanItemsDataTable();
            base.Tables.Add(this.tabletblChallanItems);
            this.tabletblPurchases = new tblPurchasesDataTable();
            base.Tables.Add(this.tabletblPurchases);
            this.tabletblPurchaseItems = new tblPurchaseItemsDataTable();
            base.Tables.Add(this.tabletblPurchaseItems);
            this.tabletblReceiptPayments = new tblReceiptPaymentsDataTable();
            base.Tables.Add(this.tabletblReceiptPayments);
            this.tabletblItems = new tblItemsDataTable();
            base.Tables.Add(this.tabletblItems);
            this.tabletblOrder = new tblOrderDataTable();
            base.Tables.Add(this.tabletblOrder);
            this.tabletblOrderDetails = new tblOrderDetailsDataTable();
            base.Tables.Add(this.tabletblOrderDetails);
            this.tabletblCustomerMessages = new tblCustomerMessagesDataTable();
            base.Tables.Add(this.tabletblCustomerMessages);
            this.tabletblMilkSummary = new tblMilkSummaryDataTable();
            base.Tables.Add(this.tabletblMilkSummary);
            this.tabletblCustomerBalance = new tblCustomerBalanceDataTable();
            base.Tables.Add(this.tabletblCustomerBalance);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblSales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblSaleItems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblSaleSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblChallans() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblChallanItems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblPurchases() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblPurchaseItems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblReceiptPayments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblItems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblOrderDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblCustomerMessages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblMilkSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblCustomerBalance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsReportTables ds = new dsReportTables();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblSalesRowChangeEventHandler(object sender, tblSalesRowChangeEvent e);
        
        public delegate void tblSaleItemsRowChangeEventHandler(object sender, tblSaleItemsRowChangeEvent e);
        
        public delegate void tblTotalRowChangeEventHandler(object sender, tblTotalRowChangeEvent e);
        
        public delegate void tblSaleSummaryRowChangeEventHandler(object sender, tblSaleSummaryRowChangeEvent e);
        
        public delegate void tblStockRowChangeEventHandler(object sender, tblStockRowChangeEvent e);
        
        public delegate void tblChallansRowChangeEventHandler(object sender, tblChallansRowChangeEvent e);
        
        public delegate void tblChallanItemsRowChangeEventHandler(object sender, tblChallanItemsRowChangeEvent e);
        
        public delegate void tblPurchasesRowChangeEventHandler(object sender, tblPurchasesRowChangeEvent e);
        
        public delegate void tblPurchaseItemsRowChangeEventHandler(object sender, tblPurchaseItemsRowChangeEvent e);
        
        public delegate void tblReceiptPaymentsRowChangeEventHandler(object sender, tblReceiptPaymentsRowChangeEvent e);
        
        public delegate void tblItemsRowChangeEventHandler(object sender, tblItemsRowChangeEvent e);
        
        public delegate void tblOrderRowChangeEventHandler(object sender, tblOrderRowChangeEvent e);
        
        public delegate void tblOrderDetailsRowChangeEventHandler(object sender, tblOrderDetailsRowChangeEvent e);
        
        public delegate void tblCustomerMessagesRowChangeEventHandler(object sender, tblCustomerMessagesRowChangeEvent e);
        
        public delegate void tblMilkSummaryRowChangeEventHandler(object sender, tblMilkSummaryRowChangeEvent e);
        
        public delegate void tblCustomerBalanceRowChangeEventHandler(object sender, tblCustomerBalanceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSalesDataTable : global::System.Data.TypedTableBase<tblSalesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSaleDate;
            
            private global::System.Data.DataColumn columnCashCredit;
            
            private global::System.Data.DataColumn columnBillNumber;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnDiscountPercent;
            
            private global::System.Data.DataColumn columnRoundedAmount;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSalesDataTable() {
                this.TableName = "tblSales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSalesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblSalesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleDateColumn {
                get {
                    return this.columnSaleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashCreditColumn {
                get {
                    return this.columnCashCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillNumberColumn {
                get {
                    return this.columnBillNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountPercentColumn {
                get {
                    return this.columnDiscountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoundedAmountColumn {
                get {
                    return this.columnRoundedAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNumberColumn {
                get {
                    return this.columnCustomerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSalesRow this[int index] {
                get {
                    return ((tblSalesRow)(this.Rows[index]));
                }
            }
            
            public event tblSalesRowChangeEventHandler tblSalesRowChanging;
            
            public event tblSalesRowChangeEventHandler tblSalesRowChanged;
            
            public event tblSalesRowChangeEventHandler tblSalesRowDeleting;
            
            public event tblSalesRowChangeEventHandler tblSalesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblSalesRow(tblSalesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSalesRow AddtblSalesRow(int ID, System.DateTime SaleDate, byte CashCredit, int BillNumber, decimal TotalAmount, decimal DiscountAmount, decimal NetAmount, string DiscountPercent, decimal RoundedAmount, string CustomerName, string CustomerNumber) {
                tblSalesRow rowtblSalesRow = ((tblSalesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        SaleDate,
                        CashCredit,
                        BillNumber,
                        TotalAmount,
                        DiscountAmount,
                        NetAmount,
                        DiscountPercent,
                        RoundedAmount,
                        CustomerName,
                        CustomerNumber};
                rowtblSalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSalesRow);
                return rowtblSalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblSalesDataTable cln = ((tblSalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSalesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSaleDate = base.Columns["SaleDate"];
                this.columnCashCredit = base.Columns["CashCredit"];
                this.columnBillNumber = base.Columns["BillNumber"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnDiscountPercent = base.Columns["DiscountPercent"];
                this.columnRoundedAmount = base.Columns["RoundedAmount"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerNumber = base.Columns["CustomerNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSaleDate = new global::System.Data.DataColumn("SaleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleDate);
                this.columnCashCredit = new global::System.Data.DataColumn("CashCredit", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashCredit);
                this.columnBillNumber = new global::System.Data.DataColumn("BillNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillNumber);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnDiscountPercent = new global::System.Data.DataColumn("DiscountPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountPercent);
                this.columnRoundedAmount = new global::System.Data.DataColumn("RoundedAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoundedAmount);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerNumber = new global::System.Data.DataColumn("CustomerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerNumber);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSalesRow NewtblSalesRow() {
                return ((tblSalesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSalesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblSalesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSalesRowChanged != null)) {
                    this.tblSalesRowChanged(this, new tblSalesRowChangeEvent(((tblSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSalesRowChanging != null)) {
                    this.tblSalesRowChanging(this, new tblSalesRowChangeEvent(((tblSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSalesRowDeleted != null)) {
                    this.tblSalesRowDeleted(this, new tblSalesRowChangeEvent(((tblSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSalesRowDeleting != null)) {
                    this.tblSalesRowDeleting(this, new tblSalesRowChangeEvent(((tblSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblSalesRow(tblSalesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSalesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSaleItemsDataTable : global::System.Data.TypedTableBase<tblSaleItemsRow> {
            
            private global::System.Data.DataColumn columnSaleID;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleItemsDataTable() {
                this.TableName = "tblSaleItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSaleItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblSaleItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIDColumn {
                get {
                    return this.columnSaleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleItemsRow this[int index] {
                get {
                    return ((tblSaleItemsRow)(this.Rows[index]));
                }
            }
            
            public event tblSaleItemsRowChangeEventHandler tblSaleItemsRowChanging;
            
            public event tblSaleItemsRowChangeEventHandler tblSaleItemsRowChanged;
            
            public event tblSaleItemsRowChangeEventHandler tblSaleItemsRowDeleting;
            
            public event tblSaleItemsRowChangeEventHandler tblSaleItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblSaleItemsRow(tblSaleItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleItemsRow AddtblSaleItemsRow(int SaleID, string ItemName, decimal Quantity, decimal Rate, decimal Amount) {
                tblSaleItemsRow rowtblSaleItemsRow = ((tblSaleItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleID,
                        ItemName,
                        Quantity,
                        Rate,
                        Amount};
                rowtblSaleItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSaleItemsRow);
                return rowtblSaleItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblSaleItemsDataTable cln = ((tblSaleItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSaleItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSaleID = base.Columns["SaleID"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSaleID = new global::System.Data.DataColumn("SaleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleID);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleItemsRow NewtblSaleItemsRow() {
                return ((tblSaleItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSaleItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblSaleItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSaleItemsRowChanged != null)) {
                    this.tblSaleItemsRowChanged(this, new tblSaleItemsRowChangeEvent(((tblSaleItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSaleItemsRowChanging != null)) {
                    this.tblSaleItemsRowChanging(this, new tblSaleItemsRowChangeEvent(((tblSaleItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSaleItemsRowDeleted != null)) {
                    this.tblSaleItemsRowDeleted(this, new tblSaleItemsRowChangeEvent(((tblSaleItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSaleItemsRowDeleting != null)) {
                    this.tblSaleItemsRowDeleting(this, new tblSaleItemsRowChangeEvent(((tblSaleItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblSaleItemsRow(tblSaleItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSaleItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblTotalDataTable : global::System.Data.TypedTableBase<tblTotalRow> {
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTotalDataTable() {
                this.TableName = "tblTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTotalRow this[int index] {
                get {
                    return ((tblTotalRow)(this.Rows[index]));
                }
            }
            
            public event tblTotalRowChangeEventHandler tblTotalRowChanging;
            
            public event tblTotalRowChangeEventHandler tblTotalRowChanged;
            
            public event tblTotalRowChangeEventHandler tblTotalRowDeleting;
            
            public event tblTotalRowChangeEventHandler tblTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblTotalRow(tblTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTotalRow AddtblTotalRow(decimal TotalAmount) {
                tblTotalRow rowtblTotalRow = ((tblTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TotalAmount};
                rowtblTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblTotalRow);
                return rowtblTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblTotalDataTable cln = ((tblTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTotalAmount = base.Columns["TotalAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTotalRow NewtblTotalRow() {
                return ((tblTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblTotalRowChanged != null)) {
                    this.tblTotalRowChanged(this, new tblTotalRowChangeEvent(((tblTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblTotalRowChanging != null)) {
                    this.tblTotalRowChanging(this, new tblTotalRowChangeEvent(((tblTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblTotalRowDeleted != null)) {
                    this.tblTotalRowDeleted(this, new tblTotalRowChangeEvent(((tblTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblTotalRowDeleting != null)) {
                    this.tblTotalRowDeleting(this, new tblTotalRowChangeEvent(((tblTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblTotalRow(tblTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSaleSummaryDataTable : global::System.Data.TypedTableBase<tblSaleSummaryRow> {
            
            private global::System.Data.DataColumn columnSaleDate;
            
            private global::System.Data.DataColumn columnCashier;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnGroupName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnVat;
            
            private global::System.Data.DataColumn columnVatAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleSummaryDataTable() {
                this.TableName = "tblSaleSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSaleSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblSaleSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleDateColumn {
                get {
                    return this.columnSaleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashierColumn {
                get {
                    return this.columnCashier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupNameColumn {
                get {
                    return this.columnGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatColumn {
                get {
                    return this.columnVat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatAmountColumn {
                get {
                    return this.columnVatAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleSummaryRow this[int index] {
                get {
                    return ((tblSaleSummaryRow)(this.Rows[index]));
                }
            }
            
            public event tblSaleSummaryRowChangeEventHandler tblSaleSummaryRowChanging;
            
            public event tblSaleSummaryRowChangeEventHandler tblSaleSummaryRowChanged;
            
            public event tblSaleSummaryRowChangeEventHandler tblSaleSummaryRowDeleting;
            
            public event tblSaleSummaryRowChangeEventHandler tblSaleSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblSaleSummaryRow(tblSaleSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleSummaryRow AddtblSaleSummaryRow(System.DateTime SaleDate, string Cashier, string ItemName, string GroupName, decimal Quantity, string Unit, decimal Rate, decimal Amount, decimal Vat, decimal VatAmount) {
                tblSaleSummaryRow rowtblSaleSummaryRow = ((tblSaleSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleDate,
                        Cashier,
                        ItemName,
                        GroupName,
                        Quantity,
                        Unit,
                        Rate,
                        Amount,
                        Vat,
                        VatAmount};
                rowtblSaleSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSaleSummaryRow);
                return rowtblSaleSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblSaleSummaryDataTable cln = ((tblSaleSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSaleSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSaleDate = base.Columns["SaleDate"];
                this.columnCashier = base.Columns["Cashier"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnGroupName = base.Columns["GroupName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnit = base.Columns["Unit"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnVat = base.Columns["Vat"];
                this.columnVatAmount = base.Columns["VatAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSaleDate = new global::System.Data.DataColumn("SaleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleDate);
                this.columnCashier = new global::System.Data.DataColumn("Cashier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashier);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnGroupName = new global::System.Data.DataColumn("GroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnVat = new global::System.Data.DataColumn("Vat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVat);
                this.columnVatAmount = new global::System.Data.DataColumn("VatAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleSummaryRow NewtblSaleSummaryRow() {
                return ((tblSaleSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSaleSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblSaleSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSaleSummaryRowChanged != null)) {
                    this.tblSaleSummaryRowChanged(this, new tblSaleSummaryRowChangeEvent(((tblSaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSaleSummaryRowChanging != null)) {
                    this.tblSaleSummaryRowChanging(this, new tblSaleSummaryRowChangeEvent(((tblSaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSaleSummaryRowDeleted != null)) {
                    this.tblSaleSummaryRowDeleted(this, new tblSaleSummaryRowChangeEvent(((tblSaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSaleSummaryRowDeleting != null)) {
                    this.tblSaleSummaryRowDeleting(this, new tblSaleSummaryRowChangeEvent(((tblSaleSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblSaleSummaryRow(tblSaleSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSaleSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblStockDataTable : global::System.Data.TypedTableBase<tblStockRow> {
            
            private global::System.Data.DataColumn columnStockDate;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnOpening;
            
            private global::System.Data.DataColumn columnChallan;
            
            private global::System.Data.DataColumn columnSale;
            
            private global::System.Data.DataColumn columnClosing;
            
            private global::System.Data.DataColumn columnAdjusted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblStockDataTable() {
                this.TableName = "tblStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDateColumn {
                get {
                    return this.columnStockDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningColumn {
                get {
                    return this.columnOpening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChallanColumn {
                get {
                    return this.columnChallan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleColumn {
                get {
                    return this.columnSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingColumn {
                get {
                    return this.columnClosing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustedColumn {
                get {
                    return this.columnAdjusted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblStockRow this[int index] {
                get {
                    return ((tblStockRow)(this.Rows[index]));
                }
            }
            
            public event tblStockRowChangeEventHandler tblStockRowChanging;
            
            public event tblStockRowChangeEventHandler tblStockRowChanged;
            
            public event tblStockRowChangeEventHandler tblStockRowDeleting;
            
            public event tblStockRowChangeEventHandler tblStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblStockRow(tblStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblStockRow AddtblStockRow(System.DateTime StockDate, string ItemName, decimal Opening, decimal Challan, decimal Sale, decimal Closing, bool Adjusted) {
                tblStockRow rowtblStockRow = ((tblStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StockDate,
                        ItemName,
                        Opening,
                        Challan,
                        Sale,
                        Closing,
                        Adjusted};
                rowtblStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblStockRow);
                return rowtblStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblStockDataTable cln = ((tblStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStockDate = base.Columns["StockDate"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnOpening = base.Columns["Opening"];
                this.columnChallan = base.Columns["Challan"];
                this.columnSale = base.Columns["Sale"];
                this.columnClosing = base.Columns["Closing"];
                this.columnAdjusted = base.Columns["Adjusted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStockDate = new global::System.Data.DataColumn("StockDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDate);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnOpening = new global::System.Data.DataColumn("Opening", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpening);
                this.columnChallan = new global::System.Data.DataColumn("Challan", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChallan);
                this.columnSale = new global::System.Data.DataColumn("Sale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale);
                this.columnClosing = new global::System.Data.DataColumn("Closing", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosing);
                this.columnAdjusted = new global::System.Data.DataColumn("Adjusted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjusted);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblStockRow NewtblStockRow() {
                return ((tblStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblStockRowChanged != null)) {
                    this.tblStockRowChanged(this, new tblStockRowChangeEvent(((tblStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblStockRowChanging != null)) {
                    this.tblStockRowChanging(this, new tblStockRowChangeEvent(((tblStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblStockRowDeleted != null)) {
                    this.tblStockRowDeleted(this, new tblStockRowChangeEvent(((tblStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblStockRowDeleting != null)) {
                    this.tblStockRowDeleting(this, new tblStockRowChangeEvent(((tblStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblStockRow(tblStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblChallansDataTable : global::System.Data.TypedTableBase<tblChallansRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnChallanDate;
            
            private global::System.Data.DataColumn columnChallanNo;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnReceivedDate;
            
            private global::System.Data.DataColumn columnVehicleNo;
            
            private global::System.Data.DataColumn columnDeliveredBy;
            
            private global::System.Data.DataColumn columnReceivedBy;
            
            private global::System.Data.DataColumn columnCompleted;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallansDataTable() {
                this.TableName = "tblChallans";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblChallansDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblChallansDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChallanDateColumn {
                get {
                    return this.columnChallanDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChallanNoColumn {
                get {
                    return this.columnChallanNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedDateColumn {
                get {
                    return this.columnReceivedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleNoColumn {
                get {
                    return this.columnVehicleNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveredByColumn {
                get {
                    return this.columnDeliveredBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedByColumn {
                get {
                    return this.columnReceivedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompletedColumn {
                get {
                    return this.columnCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallansRow this[int index] {
                get {
                    return ((tblChallansRow)(this.Rows[index]));
                }
            }
            
            public event tblChallansRowChangeEventHandler tblChallansRowChanging;
            
            public event tblChallansRowChangeEventHandler tblChallansRowChanged;
            
            public event tblChallansRowChangeEventHandler tblChallansRowDeleting;
            
            public event tblChallansRowChangeEventHandler tblChallansRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblChallansRow(tblChallansRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallansRow AddtblChallansRow(int ID, System.DateTime ChallanDate, string ChallanNo, string SupplierName, System.DateTime ReceivedDate, string VehicleNo, string DeliveredBy, string ReceivedBy, bool Completed, string Description) {
                tblChallansRow rowtblChallansRow = ((tblChallansRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ChallanDate,
                        ChallanNo,
                        SupplierName,
                        ReceivedDate,
                        VehicleNo,
                        DeliveredBy,
                        ReceivedBy,
                        Completed,
                        Description};
                rowtblChallansRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblChallansRow);
                return rowtblChallansRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblChallansDataTable cln = ((tblChallansDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblChallansDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnChallanDate = base.Columns["ChallanDate"];
                this.columnChallanNo = base.Columns["ChallanNo"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnReceivedDate = base.Columns["ReceivedDate"];
                this.columnVehicleNo = base.Columns["VehicleNo"];
                this.columnDeliveredBy = base.Columns["DeliveredBy"];
                this.columnReceivedBy = base.Columns["ReceivedBy"];
                this.columnCompleted = base.Columns["Completed"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnChallanDate = new global::System.Data.DataColumn("ChallanDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChallanDate);
                this.columnChallanNo = new global::System.Data.DataColumn("ChallanNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChallanNo);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnReceivedDate = new global::System.Data.DataColumn("ReceivedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedDate);
                this.columnVehicleNo = new global::System.Data.DataColumn("VehicleNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleNo);
                this.columnDeliveredBy = new global::System.Data.DataColumn("DeliveredBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveredBy);
                this.columnReceivedBy = new global::System.Data.DataColumn("ReceivedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedBy);
                this.columnCompleted = new global::System.Data.DataColumn("Completed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleted);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallansRow NewtblChallansRow() {
                return ((tblChallansRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblChallansRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblChallansRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblChallansRowChanged != null)) {
                    this.tblChallansRowChanged(this, new tblChallansRowChangeEvent(((tblChallansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblChallansRowChanging != null)) {
                    this.tblChallansRowChanging(this, new tblChallansRowChangeEvent(((tblChallansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblChallansRowDeleted != null)) {
                    this.tblChallansRowDeleted(this, new tblChallansRowChangeEvent(((tblChallansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblChallansRowDeleting != null)) {
                    this.tblChallansRowDeleting(this, new tblChallansRowChangeEvent(((tblChallansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblChallansRow(tblChallansRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblChallansDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblChallanItemsDataTable : global::System.Data.TypedTableBase<tblChallanItemsRow> {
            
            private global::System.Data.DataColumn columnChallanID;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUnitName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallanItemsDataTable() {
                this.TableName = "tblChallanItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblChallanItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblChallanItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChallanIDColumn {
                get {
                    return this.columnChallanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallanItemsRow this[int index] {
                get {
                    return ((tblChallanItemsRow)(this.Rows[index]));
                }
            }
            
            public event tblChallanItemsRowChangeEventHandler tblChallanItemsRowChanging;
            
            public event tblChallanItemsRowChangeEventHandler tblChallanItemsRowChanged;
            
            public event tblChallanItemsRowChangeEventHandler tblChallanItemsRowDeleting;
            
            public event tblChallanItemsRowChangeEventHandler tblChallanItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblChallanItemsRow(tblChallanItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallanItemsRow AddtblChallanItemsRow(int ChallanID, string ItemName, decimal Quantity, string UnitName) {
                tblChallanItemsRow rowtblChallanItemsRow = ((tblChallanItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChallanID,
                        ItemName,
                        Quantity,
                        UnitName};
                rowtblChallanItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblChallanItemsRow);
                return rowtblChallanItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblChallanItemsDataTable cln = ((tblChallanItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblChallanItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChallanID = base.Columns["ChallanID"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnitName = base.Columns["UnitName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChallanID = new global::System.Data.DataColumn("ChallanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChallanID);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallanItemsRow NewtblChallanItemsRow() {
                return ((tblChallanItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblChallanItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblChallanItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblChallanItemsRowChanged != null)) {
                    this.tblChallanItemsRowChanged(this, new tblChallanItemsRowChangeEvent(((tblChallanItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblChallanItemsRowChanging != null)) {
                    this.tblChallanItemsRowChanging(this, new tblChallanItemsRowChangeEvent(((tblChallanItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblChallanItemsRowDeleted != null)) {
                    this.tblChallanItemsRowDeleted(this, new tblChallanItemsRowChangeEvent(((tblChallanItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblChallanItemsRowDeleting != null)) {
                    this.tblChallanItemsRowDeleting(this, new tblChallanItemsRowChangeEvent(((tblChallanItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblChallanItemsRow(tblChallanItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblChallanItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblPurchasesDataTable : global::System.Data.TypedTableBase<tblPurchasesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnCashCredit;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnOtherCharges;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnDeliveredBy;
            
            private global::System.Data.DataColumn columnBalanceAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchasesDataTable() {
                this.TableName = "tblPurchases";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblPurchasesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblPurchasesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashCreditColumn {
                get {
                    return this.columnCashCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherChargesColumn {
                get {
                    return this.columnOtherCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveredByColumn {
                get {
                    return this.columnDeliveredBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceAmountColumn {
                get {
                    return this.columnBalanceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchasesRow this[int index] {
                get {
                    return ((tblPurchasesRow)(this.Rows[index]));
                }
            }
            
            public event tblPurchasesRowChangeEventHandler tblPurchasesRowChanging;
            
            public event tblPurchasesRowChangeEventHandler tblPurchasesRowChanged;
            
            public event tblPurchasesRowChangeEventHandler tblPurchasesRowDeleting;
            
            public event tblPurchasesRowChangeEventHandler tblPurchasesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblPurchasesRow(tblPurchasesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchasesRow AddtblPurchasesRow(int ID, System.DateTime InvoiceDate, string InvoiceNo, string SupplierName, string CashCredit, decimal TotalAmount, decimal TaxAmount, decimal OtherCharges, decimal DiscountAmount, decimal NetAmount, string DeliveredBy, decimal BalanceAmount) {
                tblPurchasesRow rowtblPurchasesRow = ((tblPurchasesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        InvoiceDate,
                        InvoiceNo,
                        SupplierName,
                        CashCredit,
                        TotalAmount,
                        TaxAmount,
                        OtherCharges,
                        DiscountAmount,
                        NetAmount,
                        DeliveredBy,
                        BalanceAmount};
                rowtblPurchasesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblPurchasesRow);
                return rowtblPurchasesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblPurchasesDataTable cln = ((tblPurchasesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblPurchasesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnCashCredit = base.Columns["CashCredit"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnOtherCharges = base.Columns["OtherCharges"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnDeliveredBy = base.Columns["DeliveredBy"];
                this.columnBalanceAmount = base.Columns["BalanceAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnCashCredit = new global::System.Data.DataColumn("CashCredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashCredit);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnOtherCharges = new global::System.Data.DataColumn("OtherCharges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherCharges);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnDeliveredBy = new global::System.Data.DataColumn("DeliveredBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveredBy);
                this.columnBalanceAmount = new global::System.Data.DataColumn("BalanceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchasesRow NewtblPurchasesRow() {
                return ((tblPurchasesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblPurchasesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblPurchasesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblPurchasesRowChanged != null)) {
                    this.tblPurchasesRowChanged(this, new tblPurchasesRowChangeEvent(((tblPurchasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblPurchasesRowChanging != null)) {
                    this.tblPurchasesRowChanging(this, new tblPurchasesRowChangeEvent(((tblPurchasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblPurchasesRowDeleted != null)) {
                    this.tblPurchasesRowDeleted(this, new tblPurchasesRowChangeEvent(((tblPurchasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblPurchasesRowDeleting != null)) {
                    this.tblPurchasesRowDeleting(this, new tblPurchasesRowChangeEvent(((tblPurchasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblPurchasesRow(tblPurchasesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblPurchasesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblPurchaseItemsDataTable : global::System.Data.TypedTableBase<tblPurchaseItemsRow> {
            
            private global::System.Data.DataColumn columnInvoiceID;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnVat;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchaseItemsDataTable() {
                this.TableName = "tblPurchaseItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblPurchaseItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblPurchaseItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceIDColumn {
                get {
                    return this.columnInvoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatColumn {
                get {
                    return this.columnVat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchaseItemsRow this[int index] {
                get {
                    return ((tblPurchaseItemsRow)(this.Rows[index]));
                }
            }
            
            public event tblPurchaseItemsRowChangeEventHandler tblPurchaseItemsRowChanging;
            
            public event tblPurchaseItemsRowChangeEventHandler tblPurchaseItemsRowChanged;
            
            public event tblPurchaseItemsRowChangeEventHandler tblPurchaseItemsRowDeleting;
            
            public event tblPurchaseItemsRowChangeEventHandler tblPurchaseItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblPurchaseItemsRow(tblPurchaseItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchaseItemsRow AddtblPurchaseItemsRow(int InvoiceID, string ItemName, decimal Quantity, string UnitName, decimal Vat, decimal Rate, decimal Amount) {
                tblPurchaseItemsRow rowtblPurchaseItemsRow = ((tblPurchaseItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InvoiceID,
                        ItemName,
                        Quantity,
                        UnitName,
                        Vat,
                        Rate,
                        Amount};
                rowtblPurchaseItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblPurchaseItemsRow);
                return rowtblPurchaseItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblPurchaseItemsDataTable cln = ((tblPurchaseItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblPurchaseItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvoiceID = base.Columns["InvoiceID"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnVat = base.Columns["Vat"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvoiceID = new global::System.Data.DataColumn("InvoiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceID);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnVat = new global::System.Data.DataColumn("Vat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVat);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchaseItemsRow NewtblPurchaseItemsRow() {
                return ((tblPurchaseItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblPurchaseItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblPurchaseItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblPurchaseItemsRowChanged != null)) {
                    this.tblPurchaseItemsRowChanged(this, new tblPurchaseItemsRowChangeEvent(((tblPurchaseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblPurchaseItemsRowChanging != null)) {
                    this.tblPurchaseItemsRowChanging(this, new tblPurchaseItemsRowChangeEvent(((tblPurchaseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblPurchaseItemsRowDeleted != null)) {
                    this.tblPurchaseItemsRowDeleted(this, new tblPurchaseItemsRowChangeEvent(((tblPurchaseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblPurchaseItemsRowDeleting != null)) {
                    this.tblPurchaseItemsRowDeleting(this, new tblPurchaseItemsRowChangeEvent(((tblPurchaseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblPurchaseItemsRow(tblPurchaseItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblPurchaseItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblReceiptPaymentsDataTable : global::System.Data.TypedTableBase<tblReceiptPaymentsRow> {
            
            private global::System.Data.DataColumn columnTransactionDate;
            
            private global::System.Data.DataColumn columnReceiptPayment;
            
            private global::System.Data.DataColumn columnParticulars;
            
            private global::System.Data.DataColumn columnPayMode;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblReceiptPaymentsDataTable() {
                this.TableName = "tblReceiptPayments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblReceiptPaymentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblReceiptPaymentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransactionDateColumn {
                get {
                    return this.columnTransactionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptPaymentColumn {
                get {
                    return this.columnReceiptPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParticularsColumn {
                get {
                    return this.columnParticulars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayModeColumn {
                get {
                    return this.columnPayMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblReceiptPaymentsRow this[int index] {
                get {
                    return ((tblReceiptPaymentsRow)(this.Rows[index]));
                }
            }
            
            public event tblReceiptPaymentsRowChangeEventHandler tblReceiptPaymentsRowChanging;
            
            public event tblReceiptPaymentsRowChangeEventHandler tblReceiptPaymentsRowChanged;
            
            public event tblReceiptPaymentsRowChangeEventHandler tblReceiptPaymentsRowDeleting;
            
            public event tblReceiptPaymentsRowChangeEventHandler tblReceiptPaymentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblReceiptPaymentsRow(tblReceiptPaymentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblReceiptPaymentsRow AddtblReceiptPaymentsRow(System.DateTime TransactionDate, string ReceiptPayment, string Particulars, string PayMode, decimal Amount) {
                tblReceiptPaymentsRow rowtblReceiptPaymentsRow = ((tblReceiptPaymentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TransactionDate,
                        ReceiptPayment,
                        Particulars,
                        PayMode,
                        Amount};
                rowtblReceiptPaymentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblReceiptPaymentsRow);
                return rowtblReceiptPaymentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblReceiptPaymentsDataTable cln = ((tblReceiptPaymentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblReceiptPaymentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTransactionDate = base.Columns["TransactionDate"];
                this.columnReceiptPayment = base.Columns["ReceiptPayment"];
                this.columnParticulars = base.Columns["Particulars"];
                this.columnPayMode = base.Columns["PayMode"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTransactionDate = new global::System.Data.DataColumn("TransactionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionDate);
                this.columnReceiptPayment = new global::System.Data.DataColumn("ReceiptPayment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptPayment);
                this.columnParticulars = new global::System.Data.DataColumn("Particulars", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParticulars);
                this.columnPayMode = new global::System.Data.DataColumn("PayMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMode);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblReceiptPaymentsRow NewtblReceiptPaymentsRow() {
                return ((tblReceiptPaymentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblReceiptPaymentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblReceiptPaymentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblReceiptPaymentsRowChanged != null)) {
                    this.tblReceiptPaymentsRowChanged(this, new tblReceiptPaymentsRowChangeEvent(((tblReceiptPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblReceiptPaymentsRowChanging != null)) {
                    this.tblReceiptPaymentsRowChanging(this, new tblReceiptPaymentsRowChangeEvent(((tblReceiptPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblReceiptPaymentsRowDeleted != null)) {
                    this.tblReceiptPaymentsRowDeleted(this, new tblReceiptPaymentsRowChangeEvent(((tblReceiptPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblReceiptPaymentsRowDeleting != null)) {
                    this.tblReceiptPaymentsRowDeleting(this, new tblReceiptPaymentsRowChangeEvent(((tblReceiptPaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblReceiptPaymentsRow(tblReceiptPaymentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblReceiptPaymentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblItemsDataTable : global::System.Data.TypedTableBase<tblItemsRow> {
            
            private global::System.Data.DataColumn columnItemGroup;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnUnit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemsDataTable() {
                this.TableName = "tblItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemGroupColumn {
                get {
                    return this.columnItemGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemsRow this[int index] {
                get {
                    return ((tblItemsRow)(this.Rows[index]));
                }
            }
            
            public event tblItemsRowChangeEventHandler tblItemsRowChanging;
            
            public event tblItemsRowChangeEventHandler tblItemsRowChanged;
            
            public event tblItemsRowChangeEventHandler tblItemsRowDeleting;
            
            public event tblItemsRowChangeEventHandler tblItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblItemsRow(tblItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemsRow AddtblItemsRow(string ItemGroup, int ItemCode, string Name, decimal Rate, string Unit) {
                tblItemsRow rowtblItemsRow = ((tblItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemGroup,
                        ItemCode,
                        Name,
                        Rate,
                        Unit};
                rowtblItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblItemsRow);
                return rowtblItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblItemsDataTable cln = ((tblItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemGroup = base.Columns["ItemGroup"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnName = base.Columns["Name"];
                this.columnRate = base.Columns["Rate"];
                this.columnUnit = base.Columns["Unit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemGroup = new global::System.Data.DataColumn("ItemGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemGroup);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemsRow NewtblItemsRow() {
                return ((tblItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblItemsRowChanged != null)) {
                    this.tblItemsRowChanged(this, new tblItemsRowChangeEvent(((tblItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblItemsRowChanging != null)) {
                    this.tblItemsRowChanging(this, new tblItemsRowChangeEvent(((tblItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblItemsRowDeleted != null)) {
                    this.tblItemsRowDeleted(this, new tblItemsRowChangeEvent(((tblItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblItemsRowDeleting != null)) {
                    this.tblItemsRowDeleting(this, new tblItemsRowChangeEvent(((tblItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblItemsRow(tblItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblOrderDataTable : global::System.Data.TypedTableBase<tblOrderRow> {
            
            private global::System.Data.DataColumn columnOrderNumber;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnDeliveryDateTime;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerAddress;
            
            private global::System.Data.DataColumn columnVATTIN;
            
            private global::System.Data.DataColumn columnBuyerTINNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderDataTable() {
                this.TableName = "tblOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNumberColumn {
                get {
                    return this.columnOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateTimeColumn {
                get {
                    return this.columnDeliveryDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerAddressColumn {
                get {
                    return this.columnCustomerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATTINColumn {
                get {
                    return this.columnVATTIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyerTINNumberColumn {
                get {
                    return this.columnBuyerTINNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderRow this[int index] {
                get {
                    return ((tblOrderRow)(this.Rows[index]));
                }
            }
            
            public event tblOrderRowChangeEventHandler tblOrderRowChanging;
            
            public event tblOrderRowChangeEventHandler tblOrderRowChanged;
            
            public event tblOrderRowChangeEventHandler tblOrderRowDeleting;
            
            public event tblOrderRowChangeEventHandler tblOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblOrderRow(tblOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderRow AddtblOrderRow(int OrderNumber, System.DateTime OrderDate, System.DateTime DeliveryDateTime, string CustomerName, string CustomerAddress, string VATTIN, string BuyerTINNumber) {
                tblOrderRow rowtblOrderRow = ((tblOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderNumber,
                        OrderDate,
                        DeliveryDateTime,
                        CustomerName,
                        CustomerAddress,
                        VATTIN,
                        BuyerTINNumber};
                rowtblOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblOrderRow);
                return rowtblOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblOrderDataTable cln = ((tblOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderNumber = base.Columns["OrderNumber"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnDeliveryDateTime = base.Columns["DeliveryDateTime"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerAddress = base.Columns["CustomerAddress"];
                this.columnVATTIN = base.Columns["VATTIN"];
                this.columnBuyerTINNumber = base.Columns["BuyerTINNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderNumber = new global::System.Data.DataColumn("OrderNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNumber);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnDeliveryDateTime = new global::System.Data.DataColumn("DeliveryDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDateTime);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerAddress = new global::System.Data.DataColumn("CustomerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAddress);
                this.columnVATTIN = new global::System.Data.DataColumn("VATTIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATTIN);
                this.columnBuyerTINNumber = new global::System.Data.DataColumn("BuyerTINNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerTINNumber);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderRow NewtblOrderRow() {
                return ((tblOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblOrderRowChanged != null)) {
                    this.tblOrderRowChanged(this, new tblOrderRowChangeEvent(((tblOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblOrderRowChanging != null)) {
                    this.tblOrderRowChanging(this, new tblOrderRowChangeEvent(((tblOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblOrderRowDeleted != null)) {
                    this.tblOrderRowDeleted(this, new tblOrderRowChangeEvent(((tblOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblOrderRowDeleting != null)) {
                    this.tblOrderRowDeleting(this, new tblOrderRowChangeEvent(((tblOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblOrderRow(tblOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblOrderDetailsDataTable : global::System.Data.TypedTableBase<tblOrderDetailsRow> {
            
            private global::System.Data.DataColumn columnOrderNumber;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnVat;
            
            private global::System.Data.DataColumn columnVatAmount;
            
            private global::System.Data.DataColumn columnAmountWithVat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderDetailsDataTable() {
                this.TableName = "tblOrderDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblOrderDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblOrderDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNumberColumn {
                get {
                    return this.columnOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatColumn {
                get {
                    return this.columnVat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatAmountColumn {
                get {
                    return this.columnVatAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountWithVatColumn {
                get {
                    return this.columnAmountWithVat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderDetailsRow this[int index] {
                get {
                    return ((tblOrderDetailsRow)(this.Rows[index]));
                }
            }
            
            public event tblOrderDetailsRowChangeEventHandler tblOrderDetailsRowChanging;
            
            public event tblOrderDetailsRowChangeEventHandler tblOrderDetailsRowChanged;
            
            public event tblOrderDetailsRowChangeEventHandler tblOrderDetailsRowDeleting;
            
            public event tblOrderDetailsRowChangeEventHandler tblOrderDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblOrderDetailsRow(tblOrderDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderDetailsRow AddtblOrderDetailsRow(int OrderNumber, string ItemName, decimal Quantity, string UnitName, decimal Rate, decimal Amount, decimal Vat, decimal VatAmount, decimal AmountWithVat) {
                tblOrderDetailsRow rowtblOrderDetailsRow = ((tblOrderDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderNumber,
                        ItemName,
                        Quantity,
                        UnitName,
                        Rate,
                        Amount,
                        Vat,
                        VatAmount,
                        AmountWithVat};
                rowtblOrderDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblOrderDetailsRow);
                return rowtblOrderDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblOrderDetailsDataTable cln = ((tblOrderDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblOrderDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderNumber = base.Columns["OrderNumber"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnVat = base.Columns["Vat"];
                this.columnVatAmount = base.Columns["VatAmount"];
                this.columnAmountWithVat = base.Columns["AmountWithVat"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderNumber = new global::System.Data.DataColumn("OrderNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNumber);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnVat = new global::System.Data.DataColumn("Vat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVat);
                this.columnVatAmount = new global::System.Data.DataColumn("VatAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatAmount);
                this.columnAmountWithVat = new global::System.Data.DataColumn("AmountWithVat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountWithVat);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderDetailsRow NewtblOrderDetailsRow() {
                return ((tblOrderDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblOrderDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblOrderDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblOrderDetailsRowChanged != null)) {
                    this.tblOrderDetailsRowChanged(this, new tblOrderDetailsRowChangeEvent(((tblOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblOrderDetailsRowChanging != null)) {
                    this.tblOrderDetailsRowChanging(this, new tblOrderDetailsRowChangeEvent(((tblOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblOrderDetailsRowDeleted != null)) {
                    this.tblOrderDetailsRowDeleted(this, new tblOrderDetailsRowChangeEvent(((tblOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblOrderDetailsRowDeleting != null)) {
                    this.tblOrderDetailsRowDeleting(this, new tblOrderDetailsRowChangeEvent(((tblOrderDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblOrderDetailsRow(tblOrderDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblOrderDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblCustomerMessagesDataTable : global::System.Data.TypedTableBase<tblCustomerMessagesRow> {
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnIscomplated;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnLineName;
            
            private global::System.Data.DataColumn columnLineID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerMessagesDataTable() {
                this.TableName = "tblCustomerMessages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCustomerMessagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblCustomerMessagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IscomplatedColumn {
                get {
                    return this.columnIscomplated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineNameColumn {
                get {
                    return this.columnLineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineIDColumn {
                get {
                    return this.columnLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerMessagesRow this[int index] {
                get {
                    return ((tblCustomerMessagesRow)(this.Rows[index]));
                }
            }
            
            public event tblCustomerMessagesRowChangeEventHandler tblCustomerMessagesRowChanging;
            
            public event tblCustomerMessagesRowChangeEventHandler tblCustomerMessagesRowChanged;
            
            public event tblCustomerMessagesRowChangeEventHandler tblCustomerMessagesRowDeleting;
            
            public event tblCustomerMessagesRowChangeEventHandler tblCustomerMessagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblCustomerMessagesRow(tblCustomerMessagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerMessagesRow AddtblCustomerMessagesRow(System.DateTime FromDate, System.DateTime ToDate, string Name, string Message, string Iscomplated, string Mobile, string LineName, int LineID) {
                tblCustomerMessagesRow rowtblCustomerMessagesRow = ((tblCustomerMessagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FromDate,
                        ToDate,
                        Name,
                        Message,
                        Iscomplated,
                        Mobile,
                        LineName,
                        LineID};
                rowtblCustomerMessagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblCustomerMessagesRow);
                return rowtblCustomerMessagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblCustomerMessagesDataTable cln = ((tblCustomerMessagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblCustomerMessagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnName = base.Columns["Name"];
                this.columnMessage = base.Columns["Message"];
                this.columnIscomplated = base.Columns["Iscomplated"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnLineName = base.Columns["LineName"];
                this.columnLineID = base.Columns["LineID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnIscomplated = new global::System.Data.DataColumn("Iscomplated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIscomplated);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnLineName = new global::System.Data.DataColumn("LineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineName);
                this.columnLineID = new global::System.Data.DataColumn("LineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerMessagesRow NewtblCustomerMessagesRow() {
                return ((tblCustomerMessagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblCustomerMessagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblCustomerMessagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblCustomerMessagesRowChanged != null)) {
                    this.tblCustomerMessagesRowChanged(this, new tblCustomerMessagesRowChangeEvent(((tblCustomerMessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblCustomerMessagesRowChanging != null)) {
                    this.tblCustomerMessagesRowChanging(this, new tblCustomerMessagesRowChangeEvent(((tblCustomerMessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblCustomerMessagesRowDeleted != null)) {
                    this.tblCustomerMessagesRowDeleted(this, new tblCustomerMessagesRowChangeEvent(((tblCustomerMessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblCustomerMessagesRowDeleting != null)) {
                    this.tblCustomerMessagesRowDeleting(this, new tblCustomerMessagesRowChangeEvent(((tblCustomerMessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblCustomerMessagesRow(tblCustomerMessagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblCustomerMessagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblMilkSummaryDataTable : global::System.Data.TypedTableBase<tblMilkSummaryRow> {
            
            private global::System.Data.DataColumn columnMilkDeliveryDate;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnBuffalo;
            
            private global::System.Data.DataColumn columnCow;
            
            private global::System.Data.DataColumn columnLineID;
            
            private global::System.Data.DataColumn columnCustomerNumber;
            
            private global::System.Data.DataColumn columnBillDate;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMilkSummaryDataTable() {
                this.TableName = "tblMilkSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMilkSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblMilkSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MilkDeliveryDateColumn {
                get {
                    return this.columnMilkDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuffaloColumn {
                get {
                    return this.columnBuffalo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CowColumn {
                get {
                    return this.columnCow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineIDColumn {
                get {
                    return this.columnLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNumberColumn {
                get {
                    return this.columnCustomerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillDateColumn {
                get {
                    return this.columnBillDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMilkSummaryRow this[int index] {
                get {
                    return ((tblMilkSummaryRow)(this.Rows[index]));
                }
            }
            
            public event tblMilkSummaryRowChangeEventHandler tblMilkSummaryRowChanging;
            
            public event tblMilkSummaryRowChangeEventHandler tblMilkSummaryRowChanged;
            
            public event tblMilkSummaryRowChangeEventHandler tblMilkSummaryRowDeleting;
            
            public event tblMilkSummaryRowChangeEventHandler tblMilkSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblMilkSummaryRow(tblMilkSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMilkSummaryRow AddtblMilkSummaryRow(System.DateTime MilkDeliveryDate, string Name, decimal Buffalo, decimal Cow, int LineID, int CustomerNumber, System.DateTime BillDate, string ItemName, decimal Quantity, decimal Amount) {
                tblMilkSummaryRow rowtblMilkSummaryRow = ((tblMilkSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MilkDeliveryDate,
                        Name,
                        Buffalo,
                        Cow,
                        LineID,
                        CustomerNumber,
                        BillDate,
                        ItemName,
                        Quantity,
                        Amount};
                rowtblMilkSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblMilkSummaryRow);
                return rowtblMilkSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblMilkSummaryDataTable cln = ((tblMilkSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblMilkSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMilkDeliveryDate = base.Columns["MilkDeliveryDate"];
                this.columnName = base.Columns["Name"];
                this.columnBuffalo = base.Columns["Buffalo"];
                this.columnCow = base.Columns["Cow"];
                this.columnLineID = base.Columns["LineID"];
                this.columnCustomerNumber = base.Columns["CustomerNumber"];
                this.columnBillDate = base.Columns["BillDate"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMilkDeliveryDate = new global::System.Data.DataColumn("MilkDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMilkDeliveryDate);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnBuffalo = new global::System.Data.DataColumn("Buffalo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuffalo);
                this.columnCow = new global::System.Data.DataColumn("Cow", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCow);
                this.columnLineID = new global::System.Data.DataColumn("LineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineID);
                this.columnCustomerNumber = new global::System.Data.DataColumn("CustomerNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerNumber);
                this.columnBillDate = new global::System.Data.DataColumn("BillDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillDate);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMilkSummaryRow NewtblMilkSummaryRow() {
                return ((tblMilkSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblMilkSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblMilkSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblMilkSummaryRowChanged != null)) {
                    this.tblMilkSummaryRowChanged(this, new tblMilkSummaryRowChangeEvent(((tblMilkSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblMilkSummaryRowChanging != null)) {
                    this.tblMilkSummaryRowChanging(this, new tblMilkSummaryRowChangeEvent(((tblMilkSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblMilkSummaryRowDeleted != null)) {
                    this.tblMilkSummaryRowDeleted(this, new tblMilkSummaryRowChangeEvent(((tblMilkSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblMilkSummaryRowDeleting != null)) {
                    this.tblMilkSummaryRowDeleting(this, new tblMilkSummaryRowChangeEvent(((tblMilkSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblMilkSummaryRow(tblMilkSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblMilkSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblCustomerBalanceDataTable : global::System.Data.TypedTableBase<tblCustomerBalanceRow> {
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnCustomerNumber;
            
            private global::System.Data.DataColumn columnLineNumber;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnOpeningBalance;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnBuffalo;
            
            private global::System.Data.DataColumn columnCow;
            
            private global::System.Data.DataColumn columnProducts;
            
            private global::System.Data.DataColumn columnGrandTotal;
            
            private global::System.Data.DataColumn columnBuffaloQuantity;
            
            private global::System.Data.DataColumn columnCowQuantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerBalanceDataTable() {
                this.TableName = "tblCustomerBalance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCustomerBalanceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblCustomerBalanceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNumberColumn {
                get {
                    return this.columnCustomerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineNumberColumn {
                get {
                    return this.columnLineNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningBalanceColumn {
                get {
                    return this.columnOpeningBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuffaloColumn {
                get {
                    return this.columnBuffalo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CowColumn {
                get {
                    return this.columnCow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductsColumn {
                get {
                    return this.columnProducts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrandTotalColumn {
                get {
                    return this.columnGrandTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuffaloQuantityColumn {
                get {
                    return this.columnBuffaloQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CowQuantityColumn {
                get {
                    return this.columnCowQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerBalanceRow this[int index] {
                get {
                    return ((tblCustomerBalanceRow)(this.Rows[index]));
                }
            }
            
            public event tblCustomerBalanceRowChangeEventHandler tblCustomerBalanceRowChanging;
            
            public event tblCustomerBalanceRowChangeEventHandler tblCustomerBalanceRowChanged;
            
            public event tblCustomerBalanceRowChangeEventHandler tblCustomerBalanceRowDeleting;
            
            public event tblCustomerBalanceRowChangeEventHandler tblCustomerBalanceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblCustomerBalanceRow(tblCustomerBalanceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerBalanceRow AddtblCustomerBalanceRow(System.DateTime FromDate, System.DateTime ToDate, string Name, string CustomerNumber, string LineNumber, decimal Balance, decimal OpeningBalance, decimal Amount, decimal PaidAmount, decimal Buffalo, decimal Cow, decimal Products, decimal GrandTotal, decimal BuffaloQuantity, decimal CowQuantity) {
                tblCustomerBalanceRow rowtblCustomerBalanceRow = ((tblCustomerBalanceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FromDate,
                        ToDate,
                        Name,
                        CustomerNumber,
                        LineNumber,
                        Balance,
                        OpeningBalance,
                        Amount,
                        PaidAmount,
                        Buffalo,
                        Cow,
                        Products,
                        GrandTotal,
                        BuffaloQuantity,
                        CowQuantity};
                rowtblCustomerBalanceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblCustomerBalanceRow);
                return rowtblCustomerBalanceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblCustomerBalanceDataTable cln = ((tblCustomerBalanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblCustomerBalanceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnName = base.Columns["Name"];
                this.columnCustomerNumber = base.Columns["CustomerNumber"];
                this.columnLineNumber = base.Columns["LineNumber"];
                this.columnBalance = base.Columns["Balance"];
                this.columnOpeningBalance = base.Columns["OpeningBalance"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnBuffalo = base.Columns["Buffalo"];
                this.columnCow = base.Columns["Cow"];
                this.columnProducts = base.Columns["Products"];
                this.columnGrandTotal = base.Columns["GrandTotal"];
                this.columnBuffaloQuantity = base.Columns["BuffaloQuantity"];
                this.columnCowQuantity = base.Columns["CowQuantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCustomerNumber = new global::System.Data.DataColumn("CustomerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerNumber);
                this.columnLineNumber = new global::System.Data.DataColumn("LineNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineNumber);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnOpeningBalance = new global::System.Data.DataColumn("OpeningBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningBalance);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnBuffalo = new global::System.Data.DataColumn("Buffalo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuffalo);
                this.columnCow = new global::System.Data.DataColumn("Cow", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCow);
                this.columnProducts = new global::System.Data.DataColumn("Products", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProducts);
                this.columnGrandTotal = new global::System.Data.DataColumn("GrandTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotal);
                this.columnBuffaloQuantity = new global::System.Data.DataColumn("BuffaloQuantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuffaloQuantity);
                this.columnCowQuantity = new global::System.Data.DataColumn("CowQuantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCowQuantity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerBalanceRow NewtblCustomerBalanceRow() {
                return ((tblCustomerBalanceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblCustomerBalanceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblCustomerBalanceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblCustomerBalanceRowChanged != null)) {
                    this.tblCustomerBalanceRowChanged(this, new tblCustomerBalanceRowChangeEvent(((tblCustomerBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblCustomerBalanceRowChanging != null)) {
                    this.tblCustomerBalanceRowChanging(this, new tblCustomerBalanceRowChangeEvent(((tblCustomerBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblCustomerBalanceRowDeleted != null)) {
                    this.tblCustomerBalanceRowDeleted(this, new tblCustomerBalanceRowChangeEvent(((tblCustomerBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblCustomerBalanceRowDeleting != null)) {
                    this.tblCustomerBalanceRowDeleting(this, new tblCustomerBalanceRowChangeEvent(((tblCustomerBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblCustomerBalanceRow(tblCustomerBalanceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportTables ds = new dsReportTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblCustomerBalanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblSalesRow : global::System.Data.DataRow {
            
            private tblSalesDataTable tabletblSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSalesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSales = ((tblSalesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tabletblSales.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SaleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSales.SaleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleDate\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.SaleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte CashCredit {
                get {
                    try {
                        return ((byte)(this[this.tabletblSales.CashCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashCredit\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.CashCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BillNumber {
                get {
                    try {
                        return ((int)(this[this.tabletblSales.BillNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillNumber\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.BillNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSales.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSales.DiscountAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmount\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSales.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiscountPercent {
                get {
                    try {
                        return ((string)(this[this.tabletblSales.DiscountPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountPercent\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.DiscountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RoundedAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSales.RoundedAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoundedAmount\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.RoundedAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tabletblSales.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerNumber {
                get {
                    try {
                        return ((string)(this[this.tabletblSales.CustomerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerNumber\' in table \'tblSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSales.CustomerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tabletblSales.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tabletblSales.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleDateNull() {
                return this.IsNull(this.tabletblSales.SaleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleDateNull() {
                this[this.tabletblSales.SaleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashCreditNull() {
                return this.IsNull(this.tabletblSales.CashCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashCreditNull() {
                this[this.tabletblSales.CashCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillNumberNull() {
                return this.IsNull(this.tabletblSales.BillNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillNumberNull() {
                this[this.tabletblSales.BillNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tabletblSales.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tabletblSales.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountAmountNull() {
                return this.IsNull(this.tabletblSales.DiscountAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountAmountNull() {
                this[this.tabletblSales.DiscountAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tabletblSales.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tabletblSales.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountPercentNull() {
                return this.IsNull(this.tabletblSales.DiscountPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountPercentNull() {
                this[this.tabletblSales.DiscountPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoundedAmountNull() {
                return this.IsNull(this.tabletblSales.RoundedAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoundedAmountNull() {
                this[this.tabletblSales.RoundedAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tabletblSales.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tabletblSales.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNumberNull() {
                return this.IsNull(this.tabletblSales.CustomerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNumberNull() {
                this[this.tabletblSales.CustomerNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblSaleItemsRow : global::System.Data.DataRow {
            
            private tblSaleItemsDataTable tabletblSaleItems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSaleItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSaleItems = ((tblSaleItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SaleID {
                get {
                    try {
                        return ((int)(this[this.tabletblSaleItems.SaleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleID\' in table \'tblSaleItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleItems.SaleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tabletblSaleItems.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'tblSaleItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleItems.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleItems.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'tblSaleItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleItems.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleItems.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tblSaleItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleItems.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleItems.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblSaleItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleItems.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIDNull() {
                return this.IsNull(this.tabletblSaleItems.SaleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIDNull() {
                this[this.tabletblSaleItems.SaleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tabletblSaleItems.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tabletblSaleItems.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabletblSaleItems.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabletblSaleItems.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletblSaleItems.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletblSaleItems.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblSaleItems.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblSaleItems.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblTotalRow : global::System.Data.DataRow {
            
            private tblTotalDataTable tabletblTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblTotal = ((tblTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblTotal.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'tblTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTotal.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tabletblTotal.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tabletblTotal.TotalAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblSaleSummaryRow : global::System.Data.DataRow {
            
            private tblSaleSummaryDataTable tabletblSaleSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSaleSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSaleSummary = ((tblSaleSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SaleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSaleSummary.SaleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleDate\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.SaleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cashier {
                get {
                    try {
                        return ((string)(this[this.tabletblSaleSummary.CashierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cashier\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.CashierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tabletblSaleSummary.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupName {
                get {
                    try {
                        return ((string)(this[this.tabletblSaleSummary.GroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupName\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.GroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleSummary.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabletblSaleSummary.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleSummary.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleSummary.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Vat {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleSummary.VatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vat\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.VatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VatAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblSaleSummary.VatAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatAmount\' in table \'tblSaleSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSaleSummary.VatAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleDateNull() {
                return this.IsNull(this.tabletblSaleSummary.SaleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleDateNull() {
                this[this.tabletblSaleSummary.SaleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashierNull() {
                return this.IsNull(this.tabletblSaleSummary.CashierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashierNull() {
                this[this.tabletblSaleSummary.CashierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tabletblSaleSummary.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tabletblSaleSummary.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupNameNull() {
                return this.IsNull(this.tabletblSaleSummary.GroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupNameNull() {
                this[this.tabletblSaleSummary.GroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabletblSaleSummary.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabletblSaleSummary.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabletblSaleSummary.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabletblSaleSummary.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletblSaleSummary.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletblSaleSummary.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblSaleSummary.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblSaleSummary.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatNull() {
                return this.IsNull(this.tabletblSaleSummary.VatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatNull() {
                this[this.tabletblSaleSummary.VatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatAmountNull() {
                return this.IsNull(this.tabletblSaleSummary.VatAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatAmountNull() {
                this[this.tabletblSaleSummary.VatAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblStockRow : global::System.Data.DataRow {
            
            private tblStockDataTable tabletblStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblStock = ((tblStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblStock.StockDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockDate\' in table \'tblStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblStock.StockDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tabletblStock.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'tblStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblStock.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Opening {
                get {
                    try {
                        return ((decimal)(this[this.tabletblStock.OpeningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Opening\' in table \'tblStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblStock.OpeningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Challan {
                get {
                    try {
                        return ((decimal)(this[this.tabletblStock.ChallanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Challan\' in table \'tblStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblStock.ChallanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sale {
                get {
                    try {
                        return ((decimal)(this[this.tabletblStock.SaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale\' in table \'tblStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblStock.SaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Closing {
                get {
                    try {
                        return ((decimal)(this[this.tabletblStock.ClosingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Closing\' in table \'tblStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblStock.ClosingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Adjusted {
                get {
                    try {
                        return ((bool)(this[this.tabletblStock.AdjustedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adjusted\' in table \'tblStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblStock.AdjustedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDateNull() {
                return this.IsNull(this.tabletblStock.StockDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDateNull() {
                this[this.tabletblStock.StockDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tabletblStock.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tabletblStock.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningNull() {
                return this.IsNull(this.tabletblStock.OpeningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningNull() {
                this[this.tabletblStock.OpeningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChallanNull() {
                return this.IsNull(this.tabletblStock.ChallanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChallanNull() {
                this[this.tabletblStock.ChallanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleNull() {
                return this.IsNull(this.tabletblStock.SaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleNull() {
                this[this.tabletblStock.SaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingNull() {
                return this.IsNull(this.tabletblStock.ClosingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingNull() {
                this[this.tabletblStock.ClosingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustedNull() {
                return this.IsNull(this.tabletblStock.AdjustedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustedNull() {
                this[this.tabletblStock.AdjustedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblChallansRow : global::System.Data.DataRow {
            
            private tblChallansDataTable tabletblChallans;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblChallansRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblChallans = ((tblChallansDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tabletblChallans.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ChallanDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblChallans.ChallanDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChallanDate\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.ChallanDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChallanNo {
                get {
                    try {
                        return ((string)(this[this.tabletblChallans.ChallanNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChallanNo\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.ChallanNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tabletblChallans.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceivedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblChallans.ReceivedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedDate\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.ReceivedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VehicleNo {
                get {
                    try {
                        return ((string)(this[this.tabletblChallans.VehicleNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleNo\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.VehicleNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveredBy {
                get {
                    try {
                        return ((string)(this[this.tabletblChallans.DeliveredByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveredBy\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.DeliveredByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedBy {
                get {
                    try {
                        return ((string)(this[this.tabletblChallans.ReceivedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedBy\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.ReceivedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Completed {
                get {
                    try {
                        return ((bool)(this[this.tabletblChallans.CompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Completed\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.CompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletblChallans.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tblChallans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallans.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tabletblChallans.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tabletblChallans.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChallanDateNull() {
                return this.IsNull(this.tabletblChallans.ChallanDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChallanDateNull() {
                this[this.tabletblChallans.ChallanDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChallanNoNull() {
                return this.IsNull(this.tabletblChallans.ChallanNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChallanNoNull() {
                this[this.tabletblChallans.ChallanNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tabletblChallans.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNameNull() {
                this[this.tabletblChallans.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedDateNull() {
                return this.IsNull(this.tabletblChallans.ReceivedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedDateNull() {
                this[this.tabletblChallans.ReceivedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleNoNull() {
                return this.IsNull(this.tabletblChallans.VehicleNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleNoNull() {
                this[this.tabletblChallans.VehicleNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveredByNull() {
                return this.IsNull(this.tabletblChallans.DeliveredByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveredByNull() {
                this[this.tabletblChallans.DeliveredByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedByNull() {
                return this.IsNull(this.tabletblChallans.ReceivedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedByNull() {
                this[this.tabletblChallans.ReceivedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompletedNull() {
                return this.IsNull(this.tabletblChallans.CompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompletedNull() {
                this[this.tabletblChallans.CompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletblChallans.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletblChallans.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblChallanItemsRow : global::System.Data.DataRow {
            
            private tblChallanItemsDataTable tabletblChallanItems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblChallanItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblChallanItems = ((tblChallanItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChallanID {
                get {
                    try {
                        return ((int)(this[this.tabletblChallanItems.ChallanIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChallanID\' in table \'tblChallanItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallanItems.ChallanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tabletblChallanItems.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'tblChallanItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallanItems.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblChallanItems.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'tblChallanItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallanItems.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tabletblChallanItems.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'tblChallanItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChallanItems.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChallanIDNull() {
                return this.IsNull(this.tabletblChallanItems.ChallanIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChallanIDNull() {
                this[this.tabletblChallanItems.ChallanIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tabletblChallanItems.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tabletblChallanItems.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabletblChallanItems.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabletblChallanItems.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tabletblChallanItems.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNameNull() {
                this[this.tabletblChallanItems.UnitNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblPurchasesRow : global::System.Data.DataRow {
            
            private tblPurchasesDataTable tabletblPurchases;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblPurchasesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblPurchases = ((tblPurchasesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tabletblPurchases.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblPurchases.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tabletblPurchases.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tabletblPurchases.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CashCredit {
                get {
                    try {
                        return ((string)(this[this.tabletblPurchases.CashCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashCredit\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.CashCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchases.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchases.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherCharges {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchases.OtherChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherCharges\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.OtherChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchases.DiscountAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmount\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchases.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveredBy {
                get {
                    try {
                        return ((string)(this[this.tabletblPurchases.DeliveredByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveredBy\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.DeliveredByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BalanceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchases.BalanceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceAmount\' in table \'tblPurchases\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchases.BalanceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tabletblPurchases.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tabletblPurchases.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tabletblPurchases.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceDateNull() {
                this[this.tabletblPurchases.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tabletblPurchases.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNoNull() {
                this[this.tabletblPurchases.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tabletblPurchases.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNameNull() {
                this[this.tabletblPurchases.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashCreditNull() {
                return this.IsNull(this.tabletblPurchases.CashCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashCreditNull() {
                this[this.tabletblPurchases.CashCreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tabletblPurchases.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tabletblPurchases.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tabletblPurchases.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmountNull() {
                this[this.tabletblPurchases.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherChargesNull() {
                return this.IsNull(this.tabletblPurchases.OtherChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherChargesNull() {
                this[this.tabletblPurchases.OtherChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountAmountNull() {
                return this.IsNull(this.tabletblPurchases.DiscountAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountAmountNull() {
                this[this.tabletblPurchases.DiscountAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tabletblPurchases.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tabletblPurchases.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveredByNull() {
                return this.IsNull(this.tabletblPurchases.DeliveredByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveredByNull() {
                this[this.tabletblPurchases.DeliveredByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceAmountNull() {
                return this.IsNull(this.tabletblPurchases.BalanceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceAmountNull() {
                this[this.tabletblPurchases.BalanceAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblPurchaseItemsRow : global::System.Data.DataRow {
            
            private tblPurchaseItemsDataTable tabletblPurchaseItems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblPurchaseItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblPurchaseItems = ((tblPurchaseItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvoiceID {
                get {
                    try {
                        return ((int)(this[this.tabletblPurchaseItems.InvoiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceID\' in table \'tblPurchaseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchaseItems.InvoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tabletblPurchaseItems.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'tblPurchaseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchaseItems.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchaseItems.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'tblPurchaseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchaseItems.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tabletblPurchaseItems.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'tblPurchaseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchaseItems.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Vat {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchaseItems.VatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vat\' in table \'tblPurchaseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchaseItems.VatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchaseItems.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tblPurchaseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchaseItems.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblPurchaseItems.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblPurchaseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblPurchaseItems.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceIDNull() {
                return this.IsNull(this.tabletblPurchaseItems.InvoiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceIDNull() {
                this[this.tabletblPurchaseItems.InvoiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tabletblPurchaseItems.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tabletblPurchaseItems.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabletblPurchaseItems.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabletblPurchaseItems.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tabletblPurchaseItems.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNameNull() {
                this[this.tabletblPurchaseItems.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatNull() {
                return this.IsNull(this.tabletblPurchaseItems.VatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatNull() {
                this[this.tabletblPurchaseItems.VatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletblPurchaseItems.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletblPurchaseItems.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblPurchaseItems.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblPurchaseItems.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblReceiptPaymentsRow : global::System.Data.DataRow {
            
            private tblReceiptPaymentsDataTable tabletblReceiptPayments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblReceiptPaymentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblReceiptPayments = ((tblReceiptPaymentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TransactionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblReceiptPayments.TransactionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionDate\' in table \'tblReceiptPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblReceiptPayments.TransactionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptPayment {
                get {
                    try {
                        return ((string)(this[this.tabletblReceiptPayments.ReceiptPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptPayment\' in table \'tblReceiptPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblReceiptPayments.ReceiptPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Particulars {
                get {
                    try {
                        return ((string)(this[this.tabletblReceiptPayments.ParticularsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Particulars\' in table \'tblReceiptPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblReceiptPayments.ParticularsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayMode {
                get {
                    try {
                        return ((string)(this[this.tabletblReceiptPayments.PayModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayMode\' in table \'tblReceiptPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblReceiptPayments.PayModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblReceiptPayments.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblReceiptPayments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblReceiptPayments.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransactionDateNull() {
                return this.IsNull(this.tabletblReceiptPayments.TransactionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransactionDateNull() {
                this[this.tabletblReceiptPayments.TransactionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptPaymentNull() {
                return this.IsNull(this.tabletblReceiptPayments.ReceiptPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptPaymentNull() {
                this[this.tabletblReceiptPayments.ReceiptPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParticularsNull() {
                return this.IsNull(this.tabletblReceiptPayments.ParticularsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParticularsNull() {
                this[this.tabletblReceiptPayments.ParticularsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayModeNull() {
                return this.IsNull(this.tabletblReceiptPayments.PayModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayModeNull() {
                this[this.tabletblReceiptPayments.PayModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblReceiptPayments.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblReceiptPayments.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblItemsRow : global::System.Data.DataRow {
            
            private tblItemsDataTable tabletblItems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblItems = ((tblItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemGroup {
                get {
                    try {
                        return ((string)(this[this.tabletblItems.ItemGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemGroup\' in table \'tblItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblItems.ItemGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ItemCode {
                get {
                    try {
                        return ((int)(this[this.tabletblItems.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'tblItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblItems.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabletblItems.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'tblItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblItems.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletblItems.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tblItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblItems.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tabletblItems.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'tblItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblItems.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemGroupNull() {
                return this.IsNull(this.tabletblItems.ItemGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemGroupNull() {
                this[this.tabletblItems.ItemGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tabletblItems.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tabletblItems.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabletblItems.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabletblItems.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletblItems.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletblItems.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tabletblItems.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tabletblItems.UnitColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblOrderRow : global::System.Data.DataRow {
            
            private tblOrderDataTable tabletblOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblOrder = ((tblOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderNumber {
                get {
                    try {
                        return ((int)(this[this.tabletblOrder.OrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderNumber\' in table \'tblOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrder.OrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblOrder.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'tblOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrder.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblOrder.DeliveryDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDateTime\' in table \'tblOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrder.DeliveryDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tabletblOrder.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'tblOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrder.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerAddress {
                get {
                    try {
                        return ((string)(this[this.tabletblOrder.CustomerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAddress\' in table \'tblOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrder.CustomerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VATTIN {
                get {
                    try {
                        return ((string)(this[this.tabletblOrder.VATTINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATTIN\' in table \'tblOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrder.VATTINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyerTINNumber {
                get {
                    try {
                        return ((string)(this[this.tabletblOrder.BuyerTINNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyerTINNumber\' in table \'tblOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrder.BuyerTINNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNumberNull() {
                return this.IsNull(this.tabletblOrder.OrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNumberNull() {
                this[this.tabletblOrder.OrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tabletblOrder.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tabletblOrder.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateTimeNull() {
                return this.IsNull(this.tabletblOrder.DeliveryDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateTimeNull() {
                this[this.tabletblOrder.DeliveryDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tabletblOrder.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tabletblOrder.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerAddressNull() {
                return this.IsNull(this.tabletblOrder.CustomerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerAddressNull() {
                this[this.tabletblOrder.CustomerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATTINNull() {
                return this.IsNull(this.tabletblOrder.VATTINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATTINNull() {
                this[this.tabletblOrder.VATTINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyerTINNumberNull() {
                return this.IsNull(this.tabletblOrder.BuyerTINNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyerTINNumberNull() {
                this[this.tabletblOrder.BuyerTINNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblOrderDetailsRow : global::System.Data.DataRow {
            
            private tblOrderDetailsDataTable tabletblOrderDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblOrderDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblOrderDetails = ((tblOrderDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderNumber {
                get {
                    try {
                        return ((int)(this[this.tabletblOrderDetails.OrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderNumber\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.OrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tabletblOrderDetails.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblOrderDetails.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tabletblOrderDetails.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tabletblOrderDetails.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblOrderDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Vat {
                get {
                    try {
                        return ((decimal)(this[this.tabletblOrderDetails.VatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vat\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.VatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VatAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblOrderDetails.VatAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatAmount\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.VatAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountWithVat {
                get {
                    try {
                        return ((decimal)(this[this.tabletblOrderDetails.AmountWithVatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountWithVat\' in table \'tblOrderDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderDetails.AmountWithVatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNumberNull() {
                return this.IsNull(this.tabletblOrderDetails.OrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNumberNull() {
                this[this.tabletblOrderDetails.OrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tabletblOrderDetails.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tabletblOrderDetails.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabletblOrderDetails.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabletblOrderDetails.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tabletblOrderDetails.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNameNull() {
                this[this.tabletblOrderDetails.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tabletblOrderDetails.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tabletblOrderDetails.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblOrderDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblOrderDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatNull() {
                return this.IsNull(this.tabletblOrderDetails.VatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatNull() {
                this[this.tabletblOrderDetails.VatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatAmountNull() {
                return this.IsNull(this.tabletblOrderDetails.VatAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatAmountNull() {
                this[this.tabletblOrderDetails.VatAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountWithVatNull() {
                return this.IsNull(this.tabletblOrderDetails.AmountWithVatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountWithVatNull() {
                this[this.tabletblOrderDetails.AmountWithVatColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblCustomerMessagesRow : global::System.Data.DataRow {
            
            private tblCustomerMessagesDataTable tabletblCustomerMessages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCustomerMessagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblCustomerMessages = ((tblCustomerMessagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblCustomerMessages.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblCustomerMessages.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerMessages.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerMessages.MessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Message\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Iscomplated {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerMessages.IscomplatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Iscomplated\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.IscomplatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerMessages.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineName {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerMessages.LineNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineName\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.LineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LineID {
                get {
                    try {
                        return ((int)(this[this.tabletblCustomerMessages.LineIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineID\' in table \'tblCustomerMessages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerMessages.LineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tabletblCustomerMessages.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tabletblCustomerMessages.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tabletblCustomerMessages.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tabletblCustomerMessages.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabletblCustomerMessages.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabletblCustomerMessages.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageNull() {
                return this.IsNull(this.tabletblCustomerMessages.MessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageNull() {
                this[this.tabletblCustomerMessages.MessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIscomplatedNull() {
                return this.IsNull(this.tabletblCustomerMessages.IscomplatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIscomplatedNull() {
                this[this.tabletblCustomerMessages.IscomplatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tabletblCustomerMessages.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tabletblCustomerMessages.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineNameNull() {
                return this.IsNull(this.tabletblCustomerMessages.LineNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineNameNull() {
                this[this.tabletblCustomerMessages.LineNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineIDNull() {
                return this.IsNull(this.tabletblCustomerMessages.LineIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineIDNull() {
                this[this.tabletblCustomerMessages.LineIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblMilkSummaryRow : global::System.Data.DataRow {
            
            private tblMilkSummaryDataTable tabletblMilkSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMilkSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblMilkSummary = ((tblMilkSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MilkDeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblMilkSummary.MilkDeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MilkDeliveryDate\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.MilkDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabletblMilkSummary.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Buffalo {
                get {
                    try {
                        return ((decimal)(this[this.tabletblMilkSummary.BuffaloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Buffalo\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.BuffaloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cow {
                get {
                    try {
                        return ((decimal)(this[this.tabletblMilkSummary.CowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cow\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.CowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LineID {
                get {
                    try {
                        return ((int)(this[this.tabletblMilkSummary.LineIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineID\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.LineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerNumber {
                get {
                    try {
                        return ((int)(this[this.tabletblMilkSummary.CustomerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerNumber\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.CustomerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblMilkSummary.BillDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillDate\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.BillDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tabletblMilkSummary.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblMilkSummary.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblMilkSummary.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblMilkSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMilkSummary.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMilkDeliveryDateNull() {
                return this.IsNull(this.tabletblMilkSummary.MilkDeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMilkDeliveryDateNull() {
                this[this.tabletblMilkSummary.MilkDeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabletblMilkSummary.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabletblMilkSummary.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuffaloNull() {
                return this.IsNull(this.tabletblMilkSummary.BuffaloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuffaloNull() {
                this[this.tabletblMilkSummary.BuffaloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCowNull() {
                return this.IsNull(this.tabletblMilkSummary.CowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCowNull() {
                this[this.tabletblMilkSummary.CowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineIDNull() {
                return this.IsNull(this.tabletblMilkSummary.LineIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineIDNull() {
                this[this.tabletblMilkSummary.LineIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNumberNull() {
                return this.IsNull(this.tabletblMilkSummary.CustomerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNumberNull() {
                this[this.tabletblMilkSummary.CustomerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillDateNull() {
                return this.IsNull(this.tabletblMilkSummary.BillDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillDateNull() {
                this[this.tabletblMilkSummary.BillDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tabletblMilkSummary.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tabletblMilkSummary.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabletblMilkSummary.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabletblMilkSummary.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblMilkSummary.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblMilkSummary.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblCustomerBalanceRow : global::System.Data.DataRow {
            
            private tblCustomerBalanceDataTable tabletblCustomerBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCustomerBalanceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblCustomerBalance = ((tblCustomerBalanceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblCustomerBalance.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblCustomerBalance.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerBalance.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerNumber {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerBalance.CustomerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerNumber\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.CustomerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineNumber {
                get {
                    try {
                        return ((string)(this[this.tabletblCustomerBalance.LineNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineNumber\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.LineNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OpeningBalance {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.OpeningBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningBalance\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.OpeningBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Buffalo {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.BuffaloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Buffalo\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.BuffaloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cow {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.CowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cow\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.CowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Products {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.ProductsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Products\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.ProductsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GrandTotal {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.GrandTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotal\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.GrandTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BuffaloQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.BuffaloQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuffaloQuantity\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.BuffaloQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CowQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblCustomerBalance.CowQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CowQuantity\' in table \'tblCustomerBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblCustomerBalance.CowQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tabletblCustomerBalance.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tabletblCustomerBalance.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tabletblCustomerBalance.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tabletblCustomerBalance.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabletblCustomerBalance.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabletblCustomerBalance.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNumberNull() {
                return this.IsNull(this.tabletblCustomerBalance.CustomerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNumberNull() {
                this[this.tabletblCustomerBalance.CustomerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineNumberNull() {
                return this.IsNull(this.tabletblCustomerBalance.LineNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineNumberNull() {
                this[this.tabletblCustomerBalance.LineNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabletblCustomerBalance.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tabletblCustomerBalance.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningBalanceNull() {
                return this.IsNull(this.tabletblCustomerBalance.OpeningBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningBalanceNull() {
                this[this.tabletblCustomerBalance.OpeningBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblCustomerBalance.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblCustomerBalance.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tabletblCustomerBalance.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tabletblCustomerBalance.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuffaloNull() {
                return this.IsNull(this.tabletblCustomerBalance.BuffaloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuffaloNull() {
                this[this.tabletblCustomerBalance.BuffaloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCowNull() {
                return this.IsNull(this.tabletblCustomerBalance.CowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCowNull() {
                this[this.tabletblCustomerBalance.CowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductsNull() {
                return this.IsNull(this.tabletblCustomerBalance.ProductsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductsNull() {
                this[this.tabletblCustomerBalance.ProductsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrandTotalNull() {
                return this.IsNull(this.tabletblCustomerBalance.GrandTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrandTotalNull() {
                this[this.tabletblCustomerBalance.GrandTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuffaloQuantityNull() {
                return this.IsNull(this.tabletblCustomerBalance.BuffaloQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuffaloQuantityNull() {
                this[this.tabletblCustomerBalance.BuffaloQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCowQuantityNull() {
                return this.IsNull(this.tabletblCustomerBalance.CowQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCowQuantityNull() {
                this[this.tabletblCustomerBalance.CowQuantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblSalesRowChangeEvent : global::System.EventArgs {
            
            private tblSalesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSalesRowChangeEvent(tblSalesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblSaleItemsRowChangeEvent : global::System.EventArgs {
            
            private tblSaleItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleItemsRowChangeEvent(tblSaleItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblTotalRowChangeEvent : global::System.EventArgs {
            
            private tblTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTotalRowChangeEvent(tblTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblSaleSummaryRowChangeEvent : global::System.EventArgs {
            
            private tblSaleSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleSummaryRowChangeEvent(tblSaleSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSaleSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblStockRowChangeEvent : global::System.EventArgs {
            
            private tblStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblStockRowChangeEvent(tblStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblChallansRowChangeEvent : global::System.EventArgs {
            
            private tblChallansRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallansRowChangeEvent(tblChallansRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallansRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblChallanItemsRowChangeEvent : global::System.EventArgs {
            
            private tblChallanItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallanItemsRowChangeEvent(tblChallanItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChallanItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblPurchasesRowChangeEvent : global::System.EventArgs {
            
            private tblPurchasesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchasesRowChangeEvent(tblPurchasesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchasesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblPurchaseItemsRowChangeEvent : global::System.EventArgs {
            
            private tblPurchaseItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchaseItemsRowChangeEvent(tblPurchaseItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblPurchaseItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblReceiptPaymentsRowChangeEvent : global::System.EventArgs {
            
            private tblReceiptPaymentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblReceiptPaymentsRowChangeEvent(tblReceiptPaymentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblReceiptPaymentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblItemsRowChangeEvent : global::System.EventArgs {
            
            private tblItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemsRowChangeEvent(tblItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblOrderRowChangeEvent : global::System.EventArgs {
            
            private tblOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderRowChangeEvent(tblOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblOrderDetailsRowChangeEvent : global::System.EventArgs {
            
            private tblOrderDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderDetailsRowChangeEvent(tblOrderDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblCustomerMessagesRowChangeEvent : global::System.EventArgs {
            
            private tblCustomerMessagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerMessagesRowChangeEvent(tblCustomerMessagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerMessagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblMilkSummaryRowChangeEvent : global::System.EventArgs {
            
            private tblMilkSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMilkSummaryRowChangeEvent(tblMilkSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMilkSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblCustomerBalanceRowChangeEvent : global::System.EventArgs {
            
            private tblCustomerBalanceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerBalanceRowChangeEvent(tblCustomerBalanceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCustomerBalanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591